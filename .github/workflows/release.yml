name: release
on:
  push:
    tags:
      - 'v\d+'


jobs:
  create_branch:
    name: Create release branch
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_TOKEN}}

      - name: Create release branch
        run: |
          BRANCH_NAME=release-${{ github.ref_name }}
          git checkout -b $BRANCH_NAME
          git push -u origin $BRANCH_NAME

  create_issue:
    name: Create Release issue
    runs-on: ubuntu-latest
    needs:  create_branch
    permissions:
      issues: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get tags
        id: get_tag
        run: |
          CURRENT_TAG=${{ github.ref_name }}
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 ${CURRENT_TAG}^)
          echo "current_tag=${CURRENT_TAG}" >> "$GITHUB_ENV"
          echo "previous_tag=${PREVIOUS_TAG}" >> "$GITHUB_ENV"

      - name: Git log
        id: git-log
        run: |
          git_log=$(git log --pretty=format:"- %s" "${{ env.previous_tag }}...${{ env.current_tag }}")
          echo "::set-output name=git-log::$git_log"
      - name: Get commit date
        run: echo "date=$(git log -1 --format=%cd)">>"$GITHUB_ENV"

      - name: Create release issue
        uses: imjohnbo/issue-bot@3d96848fb5e9a4a473bb81ae62b4b4866a56e93a
        id: issue-bot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          labels: "RELEASE"
          title: Release ${{ env.current_tag }}
          body: |
            Author: ${{ github.actor }}
            Date: ${{ env.date }}
            Changelog:
              ${{ steps.git-log.outputs.git-log }}

          pinned: false
          close-previous: false
      - name: Output issue number
        id: issue
        run: |
          echo "issue=${{ steps.issue-bot.outputs.issue-number }}">>"$GITHUB_OUTPUT"

  build_deploy:
    needs:  create_issue
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install, build
        run: |
          npm ci
          npm run build
      - name: Deploy to GitHub Pages
        id: deployment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
        run: |
          npm i gh-pages
          git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          npx gh-pages -d build -u "github-actions-bot <support+actions@github.com>"
